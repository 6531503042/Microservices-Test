name: CICD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: '17'

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.m2/repository
            ~/.m2/wrapper
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}

      - name: Build with Maven
        run: mvn clean install -DskipTests

      - name: Package application
        run: mvn package -DskipTests

  docker:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker image
        run: |
          IMAGE_TAG="${{ secrets.DOCKER_USERNAME }}/microservices-test:${{ github.sha }}"
          echo "Building Docker image with tag $IMAGE_TAG"
          docker buildx build --push --tag $IMAGE_TAG .

#   deploy:
#     runs-on: ubuntu-latest
#     needs: docker
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v4

#       - name: Set up Kubernetes CLI
#         uses: azure/setup-kubectl@v1
#         with:
#           version: '1.23.0'

#       - name: Set up Kubernetes context
#         run: echo "${{ secrets.KUBECONFIG }}" > $HOME/.kube/config

#       - name: Deploy to Kubernetes
#         run: |
#           kubectl apply -f k8s/deployment.yaml
#           kubectl apply -f k8s/service.yaml

#       - name: Notify deployment
#         run: echo "Deployment completed successfully."
